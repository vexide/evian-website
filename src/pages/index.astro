---
import { Code } from "astro:components";
import Layout from "layouts/Layout.astro";
---

<Layout
	name="evian"
	title="evian"
	description="a controls library for vexide"
>
	<main>
		<article class="left-column noise">
			<section class="title">
				<span class="counter">01.</span>
				<h1>/ˈeɪviɒn/</h1>
				<p>a controls library for vexide</p>
			</section>
			<section class="synopsis">
				<span class="counter">02.</span>
				<p>
					evian is a library for controlling mobile robots using the <a
						href="https://vexide.dev/">vexide robotics runtime</a
					> autonomously. It is designed to be both easy to <i>use</i> and easy to
					<i>extend</i>.
				</p>
				<br/>
				<p>
					evian comes with many useful features out-of-the-box, such as wheeled odometry, PID control, and path following, but also makes it easy to adapt your own motion control and localization.
				</p>
			</section>
			<section class="buttons">
				<a
					class="button variant-foreground"
					href="https://docs.rs/evian/">
					<span>learn more</span>
				</a
				>
				<a
					class="button variant-outlined"
					href="#">
					<span>source code</span></a
				>
			</section>
		</article>
		<aside class="right-column noise">
			<Code code={`// The drivetrain.
let mut drivetrain = Drivetrain::new(
	Differential::new(left_motors, right_motors),
	WheeledTracking::new(
		(0.0, 0.0),
		90.0.deg(),
		[forward_tracker],
		[sideways_tracker],
		Some(imu),
	),
);

// Pass this reference to motion controllers.
let dt = &mut drivetrain;

// Basic motion controller (driving and turning).
let mut basic = Basic {
	linear_controller: LINEAR_PID,
	angular_controller: ANGULAR_PID,
	linear_tolerances: LINEAR_TOLERANCES,
	angular_tolerances: ANGULAR_TOLERANCES,
	timeout: Some(Duration::from_secs(10)),
};

// Turn to 0 degrees.
basic.turn_to_heading(&mut dt, 0.0.deg()).await;

// Drive forwards at 50% speed.
basic.drive_distance(&mut dt, 24.0)
    .with_linear_output_limit(6.0)
    .await;`} lang="rs" theme="ayu-dark" />
		</aside>
	</main>
</Layout>

<style>
	main {
		flex: 1 1 auto;
		position: relative;
		display: flex;
	}

	.left-column {
		flex: 1;
		border-right: 1px solid var(--border);
		border-top: 1px solid var(--border);
		border-top-right-radius: 16px;
		background: linear-gradient(45deg, #1f2127, #15161b);
		display: flex;
		flex-direction: column;
		margin-right: -1px;
	}

	.right-column {
		flex: 0.6;
		border-top: 1px solid var(--border);
		border-left: 1px solid var(--border);
		border-top-left-radius: 16px;
		background: #0d1016;
	}
	
	.left-column,
	.right-column {
		position: relative;
		overflow: hidden;
		z-index: 0;
	}

	.counter {
		position: absolute;
		margin-top: 8px;
		margin-left: -48px;
		font-size: 1.6rem;
		font-family: var(--font-display);
		color: #59c2ff;
	}

	h1 {
		font-size: 120px;
		font-weight: 200;
		color: #bfbdb6;
		font-family: var(--font-text);
		margin: 0;
		margin-block-end: 24px;
	}

	p {
		margin: 0;
		font-size: 20px;
		color: hsl(var(--foreground-secondary));
	}

	p a {
		color: #ffb454;
		text-decoration-thickness: 1px;
	}

	section.title {
		border-radius: 8px;
		border: 1px solid var(--border);
		margin: 24px;
		margin-bottom: 0;
	}

	section.title h1 {
		margin-top: -6px; /* optical alignment */
		font-size: 4.8rem;
	}

	section.title p {
		font-family: var(--font-display);
	}

	section {
		padding: 48px 96px;
	}

	section.synopsis {
		border-bottom: 1px solid var(--border);
	}

	section.buttons {
		flex: 1 1 auto;
		display: flex;
		align-items: flex-end;
		padding-top: 0;
		gap: 16px;
	}

	.button {
		font-family: var(--font-display);
		font-size: 16px;
		padding: 12px 48px;
		border-radius: 50px;
		border: none;
		text-decoration: none;
		text-align: center;
		transition: 150ms ease;
	}

	.button.variant-foreground {
		background: linear-gradient(hsl(201, 40%, 14%), hsl(198, 16%, 13%));
		color: #87c5e9;
		text-shadow:
			0 0 5px hsl(202, 100%, 67%),
			0 0 24px hsl(202, 100%, 67%);
		border: none;
		box-shadow:
			inset 0 0 0 rgba(0, 0, 0, 0.5),
			inset 0 0 0 #101319,
			inset 0 1px 0 hsl(202, 100%, 53%, 0.25),
			inset 0 -2px 8px hsl(220, 26%, 7%, 0.25),
			0 0 0 1px #101319,
			0 2px 5px #131720;
		}
		
	.button.variant-outlined {
		background-color: #24262c;
		color: #bfbdb6;
		border: none;
		box-shadow:
			inset 0 0 0 rgba(0, 0, 0, 0.5),
			inset 0 0 0 #101319,
			inset 0 1px 0 hsl(45, 2%, 53%, 0.25),
			inset 0 -2px 8px hsl(220, 26%, 7%, 0.25),
			0 0 0 1px #101319,
			0 2px 5px #131720;
	}


	.button.variant-outlined:active {
		color: #8a8986;
		text-shadow: 0 1px 1px hsl(220, 26%, 7%, 0.7);
		box-shadow:
			inset 0 1px 2px 0 rgba(0, 0, 0, 0.5),
			inset 0 4px 0 0 #101319,
			inset 0 5px 0 hsl(45, 2%, 53%, 0.2),
			inset 0 4px 8px hsl(220, 26%, 7%),
			0 0 0 1px #101319,
			0 2px 5px #131720;
	}

	.button.variant-foreground:active {
		/* color: #8a8986; */
		/* text-shadow: 0 1px 1px hsl(220, 26%, 7%, 0.7); */
		box-shadow:
			inset 0 1px 2px 0 rgba(0, 0, 0, 0.5),
			inset 0 4px 0 0 #101319,
			inset 0 5px 0 hsl(202, 100%, 48%, 0.15),
			inset 0 4px 8px hsl(220, 26%, 7%),
			0 0 0 1px #101319,
			0 2px 5px #131720;
	}

	.button span {
		transition: 150ms ease transform;
		display: inline-block;
	}

	.button:active span {
		transform: translateY(3px) scale(0.975);
	}

	.button:focus {
		outline: 2px solid hsl(var(--accent-primary));
		outline-offset: 2px;
	}

	.right-column :global(code) {
		font-family: ui-monospace, 
             Menlo, Monaco, 
             "Cascadia Mono", "Segoe UI Mono", 
             "Roboto Mono", 
             "Oxygen Mono",
			 "Adwaita Mono",
             "Ubuntu Mono", 
             "Source Code Pro",
             "Fira Mono", 
             "Droid Sans Mono",
             "Consolas","Courier New", monospace;
	}

	.right-column pre {
		margin: 0;
		background: transparent !important;
		font-size: 1.4rem;
		position: relative;
		counter-reset: step;
		counter-increment: step 0;
		height: 100%;
		padding-top: 8px;
	}
	
	.right-column :global(pre)::after {
		content: "";
		position: absolute;
		height: 100%;
		border-right: 1px solid var(--border);
		top: 0;
		left: 8ch;
	}

	.right-column :global(code .line)::before {
		width: 2ch;
		padding-inline: 4ch 2ch;
		margin-right: 2ch;
		box-sizing: content-box;
		text-align: right;
		content: counter(step);
		counter-increment: step;
		display: inline-block;
		color: #8a8986;
	}
</style>
